{"version":3,"file":"static/js/681.d39b375b.chunk.js","mappings":"8LAmCA,UA/BgB,WACd,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,KAAKL,EAC/B,GAAE,CAACC,IAECF,EAIL,OACE,+BACE,wBACqB,IAAlBA,EAAOO,QACN,0DAEAP,EAAOQ,KAAI,SAAAC,GAAE,OACX,gBAAIC,UAAU,cAAd,WACE,oCAAYD,EAAGE,WACf,uBAAIF,EAAGG,YAFwBH,EAAGI,GADzB,OAUtB,C,uNC/BDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAgB,mCAAG,sGAGpBF,EAAAA,EAAAA,IAAA,sCAAyCC,IAHrB,uBAEpBE,EAFoB,EAE5BC,KAAQD,QAFoB,kBAIvBA,GAJuB,2CAAH,qDAOhBE,EAAY,mCAAG,WAAMN,GAAN,yFACHC,EAAAA,EAAAA,IAAA,iBACXD,EADW,oBACGE,EADH,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZE,EAAe,mCAAG,WAAMC,GAAN,yFAGnBP,EAAAA,EAAAA,IAAA,gCACiBC,EADjB,kBACkCM,EADlC,+CAHmB,uBAEnBJ,EAFmB,EAE3BC,KAAQD,QAIVK,QAAQC,IAAIN,GANiB,kBAOtBA,GAPsB,2CAAH,sDAUfZ,EAAe,mCAAG,WAAMQ,GAAN,yFAGnBC,EAAAA,EAAAA,IAAA,iBACED,EADF,4BACwBE,EADxB,2BAHmB,uBAEnBE,EAFmB,EAE3BC,KAAQD,QAFmB,kBAMtBA,GANsB,2CAAH,sDASfO,EAAe,mCAAG,WAAMX,GAAN,yFAGnBC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,4BAA0CE,EAA1C,oBAHmB,uBAEnBU,EAFmB,EAE3BP,KAAQO,KAFmB,kBAItBA,GAJsB,2CAAH,sDAOfC,EAAS,mCAAG,WAAMxB,GAAN,yFAGbY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,oBAAuCa,IAH1B,uBAEbY,EAFa,EAErBT,KAAQS,OAFa,kBAIhBA,GAJgB,2CAAH,qD","sources":["components/Reviews.jsx","servises/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewByFilm } from '../servises/api';\n\nconst Reviews = () => {\n  const [review, setReview] = useState('');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviewByFilm(movieId).then(setReview);\n  }, [movieId]);\n\n  if (!review) {\n    return;\n  }\n\n  return (\n    <>\n      <ul>\n        {review.length === 0 ? (\n          <div> Sorry we dont have reviews </div>\n        ) : (\n          review.map(el => (\n            <li className=\"Info_author\" key={el.id}>\n              <p>Author: {el.author}</p>\n              <p>{el.content}</p>\n            </li>\n          ))\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '74469b9d93972ec6b26a5796c39ad279';\n\nexport const getTrandingFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return results;\n};\n\nexport const getFilmsById = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getFilmsByQuery = async query => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  console.log(results);\n  return results;\n};\n\nexport const getReviewByFilm = async id => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return results;\n};\n\nexport const getActorsByFilm = async id => {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n  return cast;\n};\n\nexport const getGenres = async movieId => {\n  const {\n    data: { genres },\n  } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return genres;\n};\n"],"names":["useState","review","setReview","movieId","useParams","useEffect","getReviewByFilm","then","length","map","el","className","author","content","id","axios","API_KEY","getTrandingFilms","results","data","getFilmsById","getFilmsByQuery","query","console","log","getActorsByFilm","cast","getGenres","genres"],"sourceRoot":""}