{"version":3,"file":"static/js/884.248284b0.chunk.js","mappings":"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","sources":["components/MoviesList.jsx","pages/MovieDetails.jsx","servises/api.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className=\"Movie_list\">\n      {movies.map(movie => (\n        <li className=\"Movie_link\" key={movie.id}>\n          <NavLink\n            style={() => ({\n              width: '200px',\n              height: '350px',\n              display: 'flex',\n              flexDirection: 'column',\n              alignContent: 'center',\n              justifyContent: 'space-between',\n            })}\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n          >\n            <img\n              className=\"Movie_img\"\n              src={BASE_IMG_URL + movie.poster_path}\n              alt={movie.title}\n              width={200}\n            />\n            {movie.title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { getFilmsById, getGenres } from '../servises/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Outlet, NavLink, useNavigate, useLocation } from 'react-router-dom';\nimport { BASE_IMG_URL } from '../components/MoviesList';\n\nimport { BsFillArrowLeftSquareFill } from 'react-icons/bs';\n\nconst MovieDetails = () => {\n  const [movie, setMovies] = useState(null);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    getFilmsById(movieId).then(setMovies);\n  }, [movieId]);\n\n  useEffect(() => {\n    getGenres(movieId).then(setGenres);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const handleGoBack = () => {\n    const backLinkHref = location.state?.from ?? '/';\n\n    navigate(backLinkHref);\n  };\n\n  function getTimeFromMins(mins) {\n    let hours = Math.trunc(mins / 60);\n    let minutes = mins % 60;\n    return hours + ':' + minutes;\n  }\n\n  return (\n    <>\n      <div className=\"Movie_info\">\n        <button className=\"Back_btn\" type=\"button\" onClick={handleGoBack}>\n          <BsFillArrowLeftSquareFill className=\"Back_btn-icon\" />\n        </button>\n\n        <h2>{movie.title}</h2>\n\n        <img\n          className=\"Movie_info-img\"\n          src={BASE_IMG_URL + movie.poster_path}\n          alt={movie.title}\n        />\n\n        <div className=\"Movie_info-container\">\n          <p className=\"Movie_info-title\">\n            Release date:{' '}\n            <span className=\"Movie_info-raiting\">{movie.release_date}</span>\n          </p>\n\n          <p className=\"Movie_info-title\">\n            Popularity:{' '}\n            <span className=\"Movie_info-raiting\">\n              {movie.popularity.toFixed(0)}\n            </span>\n          </p>\n\n          <p className=\"Movie_info-title\">\n            Vote Average:{' '}\n            <span className=\"Movie_info-raiting\">\n              {movie.vote_average.toFixed(1)}\n            </span>\n          </p>\n\n          <p className=\"Movie_info-title\">\n            Runtime:{' '}\n            <span className=\"Movie_info-raiting\">\n              {getTimeFromMins(movie.runtime)}\n            </span>\n          </p>\n        </div>\n\n        <p className=\"Ganres_title\">Ganres:</p>\n\n        <ul className=\"Ganres_list\">\n          {genres.map(({ id, name }) => (\n            <li className=\"Ganres_item\" key={id}>\n              {name}\n            </li>\n          ))}\n        </ul>\n        <p className=\"Info_title\">More info:</p>\n        <NavLink to=\"cast\" state={location.state}>\n          Cast\n        </NavLink>\n        <NavLink to=\"reviews\" state={location.state}>\n          Reviews\n        </NavLink>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '74469b9d93972ec6b26a5796c39ad279';\n\nexport const getTrandingFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return results;\n};\n\nexport const getFilmsById = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getFilmsByQuery = async query => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  console.log(results);\n  return results;\n};\n\nexport const getReviewByFilm = async id => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return results;\n};\n\nexport const getActorsByFilm = async id => {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n  return cast;\n};\n\nexport const getGenres = async movieId => {\n  const {\n    data: { genres },\n  } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return genres;\n};\n"],"names":["BASE_IMG_URL","MoviesList","movies","location","useLocation","className","map","movie","style","width","height","display","flexDirection","alignContent","justifyContent","to","id","state","from","src","poster_path","alt","title","useState","setMovies","movieId","useParams","navigate","useNavigate","genres","setGenres","useEffect","getFilmsById","then","getGenres","mins","type","onClick","backLinkHref","release_date","popularity","toFixed","vote_average","runtime","Math","trunc","name","axios","API_KEY","getTrandingFilms","results","data","getFilmsByQuery","query","console","log","getReviewByFilm","getActorsByFilm","cast"],"sourceRoot":""}